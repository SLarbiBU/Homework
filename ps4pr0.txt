# Sarah Larbi# slarbi@bu.edu-  The contributing factor within the bug’s origins that strikes me as the “most preventable” would be that “the programmers had decided that this particular velocity figure would never be large enough to cause trouble.” Hindsight obviously shows us the importance of always taking extra precaution “just in case,” but it seems that when dealing with something that has such importance, that would be an obvious approach. - I agree with this statement in that software does not always work in a ‘does or does not’ manner. A software system always has more than one approach to any given set of problems. It can be difficult to predict all the possible obstacles and outcomes that could potentially occur, thus making software much closer to an organism than to a mechanical system.	