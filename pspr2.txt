# Question 1def mystery(a, b):    if a < 0:        return 1    else:        return 2 + mystery(a - b, b)mystery(20, 6)Working down:2 + mystery(14, 6)		2 + mystery(8, 6)		2 + mystery(2, 6)			2 + mystery(-4, 6)								1working back up:2 + (1) = 3	2 + (3) = 5		2 + (5) = 7			2 + (7) = 9# Question 2The value returned by mystery(20,6) is 9.# Question 3Including the initial call of mystery(20,6), there are 5 stack frames that occur before the base case is reached. # Question 4if a = 4 and b = -2this would cause for the function to call 4 Ð (-2) which is 4 + 2. Then it would be 6 Ð(-2) and so on.# Question 5Infinite recursion would occur when the initial a>0 and the initial b<0. This would be because subtracting a negative results in addition, and therefore you would be continuously adding the absolute value of b to a.